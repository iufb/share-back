generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  username     String
  password     String
  refreshToken String?
  createdAt    DateTime   @default(now())
  avatar       String?
  cover        String?
  bio          String?
  postLikes    PostLike[]
  bookmarks    Bookmark[]
  posts        Post[]
  follows      Follow[]
}

model Post {
  id        Int        @id @default(autoincrement())
  sourceId  Int?
  source    Post?     @relation("source", fields: [sourceId], references: [id], onDelete: Cascade)
  isRepost  Boolean   @default(false)
  isReply   Boolean   @default(false)
  childPosts Post[]   @relation("source" )
  content   String?
  authorId  Int
  images    String[]
  createdAt DateTime   @default(now())
  likes     PostLike[]
  bookmarks Bookmark[]
  author    User       @relation(fields: [authorId], references: [id])
}

model PostLike {
  userId Int
  postId Int
  post   Post? @relation(fields: [postId], references: [id])
  user   User  @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@id([userId, postId], name: "postLikeId")
}
model Bookmark {
    userId Int
    postId Int
    post   Post  @relation(fields: [postId], references: [id])
    user   User  @relation(fields: [userId], references: [id])

    @@id([userId, postId] , name: "bookmarkId")
}
model Follow{
    followTo User @relation(fields: [followToId], references: [id])
    followById Int 
    followToId Int
  @@id([followById,followToId], name: "followId")
}

